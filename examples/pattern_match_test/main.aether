(DEFINE_MODULE
  (NAME pattern_match_test)
  (INTENT "Test pattern matching capabilities")
  (CONTENT
    ; Define a simple Result type
    (DEFINE_ENUMERATION_TYPE
      (NAME Result)
      (INTENT "Represents success or failure")
      (VARIANTS
        (VARIANT Ok (HOLDS INTEGER))
        (VARIANT Error (HOLDS STRING))))
    
    (DEFINE_FUNCTION
      (NAME process_result)
      (ACCEPTS_PARAMETER (NAME "result") (TYPE Result))
      (RETURNS STRING)
      (BODY
        (RETURN_VALUE
          (MATCH_EXPRESSION result
            (CASE (Ok value)
              (STRING_CONCAT "Success: " (TO_STRING value)))
            (CASE (Error msg)
              (STRING_CONCAT "Error: " msg))))))
    
    (DEFINE_FUNCTION
      (NAME main)
      (RETURNS INTEGER)
      (BODY
        ; Test with Ok variant
        (DECLARE_VARIABLE (NAME ok_result) (TYPE Result))
        (ASSIGN
          (TARGET_VARIABLE ok_result)
          (SOURCE_EXPRESSION (Ok 42)))
        
        (CALL_FUNCTION printf "%s\n" (CALL_FUNCTION process_result ok_result))
        
        ; Test with Error variant
        (DECLARE_VARIABLE (NAME err_result) (TYPE Result))
        (ASSIGN
          (TARGET_VARIABLE err_result)
          (SOURCE_EXPRESSION (Error "Something went wrong")))
        
        (CALL_FUNCTION printf "%s\n" (CALL_FUNCTION process_result err_result))
        
        (RETURN_VALUE 0)))
  )
)