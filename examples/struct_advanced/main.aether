(DEFINE_MODULE
  (NAME struct_advanced)
  (INTENT "Test advanced struct features")
  (CONTENT
    ; Define a Point struct
    (DEFINE_STRUCTURED_TYPE
      (NAME Point)
      (INTENT "A 2D point")
      (FIELD x INTEGER)
      (FIELD y INTEGER))
    
    ; Define a Rectangle struct
    (DEFINE_STRUCTURED_TYPE
      (NAME Rectangle)
      (INTENT "A rectangle defined by two points")
      (FIELD top_left Point)
      (FIELD bottom_right Point))
    
    ; External function
    (DECLARE_EXTERNAL_FUNCTION
      (NAME printf)
      (LIBRARY "libc")
      (ACCEPTS_PARAMETER (NAME "format") (TYPE STRING))
      (RETURNS INTEGER))
    
    (DEFINE_FUNCTION
      (NAME test_nested_structs)
      (RETURNS INTEGER)
      (BODY
        ; Create points
        (DECLARE_VARIABLE (NAME p1) (TYPE Point))
        (ASSIGN
          (TARGET_VARIABLE p1)
          (SOURCE_EXPRESSION 
            (CONSTRUCT Point
              (FIELD_VALUE x 10)
              (FIELD_VALUE y 20))))
        
        (DECLARE_VARIABLE (NAME p2) (TYPE Point))
        (ASSIGN
          (TARGET_VARIABLE p2)
          (SOURCE_EXPRESSION 
            (CONSTRUCT Point
              (FIELD_VALUE x 30)
              (FIELD_VALUE y 40))))
        
        ; Create a rectangle
        (DECLARE_VARIABLE (NAME rect) (TYPE Rectangle))
        (ASSIGN
          (TARGET_VARIABLE rect)
          (SOURCE_EXPRESSION
            (CONSTRUCT Rectangle
              (FIELD_VALUE top_left p1)
              (FIELD_VALUE bottom_right p2))))
        
        ; Access nested fields
        (DECLARE_VARIABLE (NAME top_x) (TYPE INTEGER))
        (ASSIGN
          (TARGET_VARIABLE top_x)
          (SOURCE_EXPRESSION 
            (GET_FIELD_VALUE 
              (GET_FIELD_VALUE rect top_left) 
              x)))
        
        (CALL_FUNCTION printf "Rectangle top-left x: %d\n" top_x)
        
        ; Test struct assignment
        (DECLARE_VARIABLE (NAME p3) (TYPE Point))
        (ASSIGN (TARGET_VARIABLE p3) (SOURCE_EXPRESSION p1))
        
        (DECLARE_VARIABLE (NAME p3_x) (TYPE INTEGER))
        (ASSIGN
          (TARGET_VARIABLE p3_x)
          (SOURCE_EXPRESSION (GET_FIELD_VALUE p3 x)))
        
        (CALL_FUNCTION printf "Copied point x: %d\n" p3_x)
        
        (RETURN_VALUE 0)))
    
    (DEFINE_FUNCTION
      (NAME main)
      (RETURNS INTEGER)
      (BODY
        (CALL_FUNCTION test_nested_structs)
        (RETURN_VALUE 0)))
  )
)