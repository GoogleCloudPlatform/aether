(DEFINE_MODULE
  (NAME pattern_match_option)
  (CONTENT
    ; Define Option type
    (DEFINE_ENUMERATION_TYPE
      (NAME Option)
      (VARIANTS
        (VARIANT Some (HOLDS INTEGER))
        (VARIANT None)))
    
    ; External function declaration for puts
    (DECLARE_EXTERNAL_FUNCTION
      (NAME puts)
      (LIBRARY "libc")
      (ACCEPTS_PARAMETER (NAME "str") (TYPE STRING))
      (RETURNS INTEGER))
    
    (DEFINE_FUNCTION
      (NAME main)
      (RETURNS INTEGER)
      (BODY
        ; Test with Some variant
        (DECLARE_VARIABLE (NAME some_val) (TYPE Option))
        (ASSIGN
          (TARGET_VARIABLE some_val)
          (SOURCE_EXPRESSION (Some 123)))
        
        ; Match on the result
        (DECLARE_VARIABLE (NAME msg) (TYPE STRING))
        (ASSIGN
          (TARGET_VARIABLE msg)
          (SOURCE_EXPRESSION 
            (MATCH_EXPRESSION some_val
              (CASE (Some value)
                (STRING_CONCAT "Got value: " (TO_STRING value)))
              (CASE (None)
                "Got nothing"))))
        
        (CALL_FUNCTION puts msg)
        
        ; Test with None variant
        (DECLARE_VARIABLE (NAME none_val) (TYPE Option))
        (ASSIGN
          (TARGET_VARIABLE none_val)
          (SOURCE_EXPRESSION (None)))
        
        (DECLARE_VARIABLE (NAME msg2) (TYPE STRING))
        (ASSIGN
          (TARGET_VARIABLE msg2)
          (SOURCE_EXPRESSION 
            (MATCH_EXPRESSION none_val
              (CASE (Some value)
                (STRING_CONCAT "Got value: " (TO_STRING value)))
              (CASE (None)
                "Got nothing"))))
        
        (CALL_FUNCTION puts msg2)
        
        (RETURN_VALUE 0)))
  )
)