;; AetherScript Blog Server Example
;; Demonstrates HTTP server, FFI, resource management, and advanced language features

(DEFINE_MODULE
  (NAME 'blog_server')
  (INTENT "A complete HTTP blog server demonstrating AetherScript's capabilities for web applications. Features FFI integration, resource management, structured data, and proper error handling.")
  (CONTENT
    
    ;; Blog post data structure
    (DEFINE_STRUCT
      (NAME 'BlogPost')
      (INTENT "Represents a blog post with metadata and content")
      (FIELDS
        (FIELD 'id' STRING)
        (FIELD 'title' STRING)
        (FIELD 'author' STRING)
        (FIELD 'date' STRING)
        (FIELD 'content' STRING)
      )
    )
    
    ;; HTTP server functions - FFI declarations
    (DECLARE_EXTERNAL_FUNCTION
      (NAME 'http_create_server')
      (LIBRARY "aether_runtime")
      (SYMBOL "http_create_server")
      (RETURNS INTEGER)
      (ACCEPTS_PARAMETER (NAME 'port') (TYPE INTEGER))
      (ACCEPTS_PARAMETER (NAME 'handler_ptr') (TYPE (POINTER VOID)))
      (INTENT "Creates and starts HTTP server on specified port")
    )
    
    (DECLARE_EXTERNAL_FUNCTION
      (NAME 'http_stop_server')
      (LIBRARY "aether_runtime")
      (SYMBOL "http_stop_server")
      (RETURNS VOID)
      (ACCEPTS_PARAMETER (NAME 'server_handle') (TYPE INTEGER))
      (INTENT "Stops HTTP server and releases resources")
    )
    
    (DECLARE_EXTERNAL_FUNCTION
      (NAME 'http_get_request_path')
      (LIBRARY "aether_runtime")
      (SYMBOL "http_get_request_path")
      (RETURNS (POINTER CHARACTER))
      (ACCEPTS_PARAMETER (NAME 'request_ctx') (TYPE (POINTER VOID)))
      (INTENT "Extracts URL path from HTTP request context")
    )
    
    (DECLARE_EXTERNAL_FUNCTION
      (NAME 'http_get_request_method')
      (LIBRARY "aether_runtime")  
      (SYMBOL "http_get_request_method")
      (RETURNS (POINTER CHARACTER))
      (ACCEPTS_PARAMETER (NAME 'request_ctx') (TYPE (POINTER VOID)))
      (INTENT "Extracts HTTP method from request context")
    )
    
    (DECLARE_EXTERNAL_FUNCTION
      (NAME 'http_send_response')
      (LIBRARY "aether_runtime")
      (SYMBOL "http_send_response")
      (RETURNS VOID)
      (ACCEPTS_PARAMETER (NAME 'request_ctx') (TYPE (POINTER VOID)))
      (ACCEPTS_PARAMETER (NAME 'status_code') (TYPE INTEGER))
      (ACCEPTS_PARAMETER (NAME 'content_type') (TYPE (POINTER CHARACTER)))
      (ACCEPTS_PARAMETER (NAME 'body') (TYPE (POINTER CHARACTER)))
      (INTENT "Sends HTTP response with status, headers, and body")
    )
    
    ;; Standard library functions
    (DECLARE_EXTERNAL_FUNCTION
      (NAME 'string_starts_with')
      (LIBRARY "aether_runtime")
      (SYMBOL "string_starts_with")
      (RETURNS BOOLEAN)
      (ACCEPTS_PARAMETER (NAME 'text') (TYPE STRING))
      (ACCEPTS_PARAMETER (NAME 'prefix') (TYPE STRING))
      (INTENT "Check if string starts with prefix")
    )
    
    (DECLARE_EXTERNAL_FUNCTION
      (NAME 'c_string_to_aether')
      (LIBRARY "aether_runtime")
      (SYMBOL "c_string_to_aether_string")
      (RETURNS STRING)
      (ACCEPTS_PARAMETER (NAME 'c_str') (TYPE (POINTER CHARACTER)))
      (INTENT "Convert C string to AetherScript string")
    )
    
    ;; Blog data - in production this would come from a database
    (DECLARE_CONSTANT
      (NAME 'BLOG_POSTS')
      (TYPE (ARRAY BlogPost))
      (VALUE
        (ARRAY_LITERAL
          (CONSTRUCT_STRUCT 'BlogPost'
            (FIELD_VALUE 'id' (STRING_LITERAL "post-1"))
            (FIELD_VALUE 'title' (STRING_LITERAL "AetherScript: The LLM-First Language"))
            (FIELD_VALUE 'author' (STRING_LITERAL "AI Developer"))
            (FIELD_VALUE 'date' (STRING_LITERAL "2025-07-31"))
            (FIELD_VALUE 'content' (STRING_LITERAL "AetherScript revolutionizes code generation by prioritizing LLM comprehension. Its explicit S-expression syntax, built-in verification, and intent-driven design make it ideal for AI-powered development."))
          )
          (CONSTRUCT_STRUCT 'BlogPost'
            (FIELD_VALUE 'id' (STRING_LITERAL "post-2"))
            (FIELD_VALUE 'title' (STRING_LITERAL "Resource Management with RESOURCE_SCOPE"))
            (FIELD_VALUE 'author' (STRING_LITERAL "Systems Programmer"))
            (FIELD_VALUE 'date' (STRING_LITERAL "2025-07-31"))
            (FIELD_VALUE 'content' (STRING_LITERAL "AetherScript's RESOURCE_SCOPE provides deterministic resource management, ensuring proper cleanup of file handles, network connections, and memory. This prevents leaks and improves system stability."))
          )
          (CONSTRUCT_STRUCT 'BlogPost'
            (FIELD_VALUE 'id' (STRING_LITERAL "post-3"))
            (FIELD_VALUE 'title' (STRING_LITERAL "FFI Integration Made Simple"))
            (FIELD_VALUE 'author' (STRING_LITERAL "Integration Expert"))
            (FIELD_VALUE 'date' (STRING_LITERAL "2025-07-31"))
            (FIELD_VALUE 'content' (STRING_LITERAL "AetherScript's Foreign Function Interface makes it easy to integrate with existing C, Rust, and Go libraries. This example demonstrates calling HTTP server functions from Rust runtime."))
          )
        )
      )
      (INTENT "Sample blog posts for demonstration")
    )
    
    ;; HTML generation functions
    (DEFINE_FUNCTION
      (NAME 'generate_html_header')
      (ACCEPTS_PARAMETER (NAME 'title') (TYPE STRING))
      (RETURNS STRING)
      (INTENT "Generate HTML document header with styling")
      (BODY
        (RETURN_VALUE
          (STRING_CONCAT
            (STRING_LITERAL "<!DOCTYPE html><html><head><meta charset=\"UTF-8\"><title>")
            (STRING_CONCAT
              (VARIABLE_REFERENCE 'title')
              (STRING_LITERAL "</title><style>body{font-family:sans-serif;max-width:800px;margin:20px auto;line-height:1.6}article{border-bottom:1px solid #eee;padding-bottom:20px;margin-bottom:20px}h1,h2,h3{color:#333}a{color:#007bff;text-decoration:none}a:hover{text-decoration:underline}</style></head><body><header><h1>AetherScript Blog</h1><nav><a href=\"/\">Home</a></nav></header><main>")
            )
          )
        )
      )
    )
    
    (DEFINE_FUNCTION
      (NAME 'generate_html_footer')
      (RETURNS STRING)
      (INTENT "Generate HTML document footer")
      (BODY
        (RETURN_VALUE
          (STRING_LITERAL "</main><footer><p>&copy; 2025 AetherScript Blog - Powered by AetherScript</p></footer></body></html>")
        )
      )
    )
    
    (DEFINE_FUNCTION
      (NAME 'find_post_by_id')
      (ACCEPTS_PARAMETER (NAME 'post_id') (TYPE STRING))
      (RETURNS (OPTIONAL BlogPost))
      (INTENT "Find blog post by ID, return None if not found")
      (PRECONDITION
        (PREDICATE_NOT_EQUALS (VARIABLE_REFERENCE 'post_id') (STRING_LITERAL ""))
        ASSERT_FAIL "Post ID cannot be empty"
      )
      (BODY
        (FOR_EACH_LOOP
          (COLLECTION (VARIABLE_REFERENCE 'BLOG_POSTS'))
          (ELEMENT_NAME 'post')
          (BODY
            (IF_STATEMENT
              (CONDITION 
                (EXPRESSION_EQUALS 
                  (FIELD_ACCESS (VARIABLE_REFERENCE 'post') 'id')
                  (VARIABLE_REFERENCE 'post_id')
                )
              )
              (THEN_EXECUTE
                (RETURN_VALUE (SOME (VARIABLE_REFERENCE 'post')))
              )
            )
          )
        )
        (RETURN_VALUE (NONE))
      )
    )
    
    (DEFINE_FUNCTION
      (NAME 'render_blog_list')
      (RETURNS STRING)
      (INTENT "Render HTML for blog post list")
      (BODY
        (DECLARE_VARIABLE
          (NAME 'html')
          (TYPE STRING)
          (INITIAL_VALUE 
            (STRING_CONCAT
              (CALL_FUNCTION 'generate_html_header' 
                (ARGUMENTS (STRING_LITERAL "AetherScript Blog")))
              (STRING_LITERAL "<h2>Recent Posts</h2>")
            )
          )
        )
        
        (FOR_EACH_LOOP
          (COLLECTION (VARIABLE_REFERENCE 'BLOG_POSTS'))
          (ELEMENT_NAME 'post')
          (BODY
            (ASSIGN_VARIABLE 'html'
              (STRING_CONCAT
                (VARIABLE_REFERENCE 'html')
                (STRING_CONCAT
                  (STRING_LITERAL "<article><h3><a href=\"/posts/")
                  (STRING_CONCAT
                    (FIELD_ACCESS (VARIABLE_REFERENCE 'post') 'id')
                    (STRING_CONCAT
                      (STRING_LITERAL "\">")
                      (STRING_CONCAT
                        (FIELD_ACCESS (VARIABLE_REFERENCE 'post') 'title')
                        (STRING_CONCAT
                          (STRING_LITERAL "</a></h3><p><em>By ")
                          (STRING_CONCAT
                            (FIELD_ACCESS (VARIABLE_REFERENCE 'post') 'author')
                            (STRING_CONCAT
                              (STRING_LITERAL " on ")
                              (STRING_CONCAT
                                (FIELD_ACCESS (VARIABLE_REFERENCE 'post') 'date')
                                (STRING_CONCAT
                                  (STRING_LITERAL "</em></p><p>")
                                  (STRING_CONCAT
                                    (SUBSTRING 
                                      (FIELD_ACCESS (VARIABLE_REFERENCE 'post') 'content')
                                      (INTEGER_LITERAL 0)
                                      (INTEGER_LITERAL 150)
                                    )
                                    (STRING_CONCAT
                                      (STRING_LITERAL "... <a href=\"/posts/")
                                      (STRING_CONCAT
                                        (FIELD_ACCESS (VARIABLE_REFERENCE 'post') 'id')
                                        (STRING_LITERAL "\">Read More</a></p></article>")
                                      )
                                    )
                                  )
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
          )
        )
        
        (ASSIGN_VARIABLE 'html'
          (STRING_CONCAT
            (VARIABLE_REFERENCE 'html')
            (CALL_FUNCTION 'generate_html_footer' (ARGUMENTS))
          )
        )
        
        (RETURN_VALUE (VARIABLE_REFERENCE 'html'))
      )
    )
    
    (DEFINE_FUNCTION
      (NAME 'render_single_post')
      (ACCEPTS_PARAMETER (NAME 'post_id') (TYPE STRING))
      (RETURNS STRING)
      (INTENT "Render HTML for a single blog post")
      (BODY
        (DECLARE_VARIABLE
          (NAME 'post_option')
          (TYPE (OPTIONAL BlogPost))
          (INITIAL_VALUE (CALL_FUNCTION 'find_post_by_id' (ARGUMENTS (VARIABLE_REFERENCE 'post_id'))))
        )
        
        (MATCH_EXPRESSION
          (VALUE (VARIABLE_REFERENCE 'post_option'))
          (CASE 'Some'
            (BINDING 'post')
            (DECLARE_VARIABLE
              (NAME 'html')
              (TYPE STRING)
              (INITIAL_VALUE
                (STRING_CONCAT
                  (CALL_FUNCTION 'generate_html_header'
                    (ARGUMENTS (FIELD_ACCESS (VARIABLE_REFERENCE 'post') 'title')))
                  (STRING_CONCAT
                    (STRING_LITERAL "<h2>")
                    (STRING_CONCAT
                      (FIELD_ACCESS (VARIABLE_REFERENCE 'post') 'title')
                      (STRING_CONCAT
                        (STRING_LITERAL "</h2><p><em>By ")
                        (STRING_CONCAT
                          (FIELD_ACCESS (VARIABLE_REFERENCE 'post') 'author')
                          (STRING_CONCAT
                            (STRING_LITERAL " on ")
                            (STRING_CONCAT
                              (FIELD_ACCESS (VARIABLE_REFERENCE 'post') 'date')
                              (STRING_CONCAT
                                (STRING_LITERAL "</em></p><article><p>")
                                (STRING_CONCAT
                                  (FIELD_ACCESS (VARIABLE_REFERENCE 'post') 'content')
                                  (STRING_LITERAL "</p></article>")
                                )
                              )
                            )
                          )
                        )
                      )
                    )
                  )
                )
              )
            )
            (ASSIGN_VARIABLE 'html'
              (STRING_CONCAT
                (VARIABLE_REFERENCE 'html')
                (CALL_FUNCTION 'generate_html_footer' (ARGUMENTS))
              )
            )
            (RETURN_VALUE (VARIABLE_REFERENCE 'html'))
          )
          (CASE 'None'
            (RETURN_VALUE (STRING_LITERAL ""))
          )
        )
      )
    )
    
    (DEFINE_FUNCTION
      (NAME 'render_404_page')
      (RETURNS STRING)
      (INTENT "Render 404 error page")
      (BODY
        (RETURN_VALUE
          (STRING_CONCAT
            (CALL_FUNCTION 'generate_html_header' 
              (ARGUMENTS (STRING_LITERAL "404 Not Found")))
            (STRING_CONCAT
              (STRING_LITERAL "<h2>404 Not Found</h2><p>The page you requested could not be found.</p>")
              (CALL_FUNCTION 'generate_html_footer' (ARGUMENTS))
            )
          )
        )
      )
    )
    
    ;; Main HTTP request handler
    (DEFINE_FUNCTION
      (NAME 'http_request_handler')
      (ACCEPTS_PARAMETER (NAME 'request_context') (TYPE (POINTER VOID)))
      (RETURNS VOID)
      (INTENT "Handle incoming HTTP requests and route to appropriate handlers")
      (BODY
        (TRY_EXECUTE
          (PROTECTED_BLOCK
            (DECLARE_VARIABLE
              (NAME 'method_ptr')
              (TYPE (POINTER CHARACTER))
              (INITIAL_VALUE (CALL_FUNCTION 'http_get_request_method' (ARGUMENTS (VARIABLE_REFERENCE 'request_context'))))
            )
            
            (DECLARE_VARIABLE
              (NAME 'path_ptr')
              (TYPE (POINTER CHARACTER))
              (INITIAL_VALUE (CALL_FUNCTION 'http_get_request_path' (ARGUMENTS (VARIABLE_REFERENCE 'request_context'))))
            )
            
            (IF_STATEMENT
              (CONDITION
                (LOGICAL_OR
                  (EXPRESSION_EQUALS (VARIABLE_REFERENCE 'method_ptr') (NULL_VALUE))
                  (EXPRESSION_EQUALS (VARIABLE_REFERENCE 'path_ptr') (NULL_VALUE))
                )
              )
              (THEN_EXECUTE
                (CALL_FUNCTION 'http_send_response'
                  (ARGUMENTS
                    (VARIABLE_REFERENCE 'request_context')
                    (INTEGER_LITERAL 500)
                    (STRING_LITERAL "text/html")
                    (STRING_LITERAL "<h1>Internal Server Error</h1>")
                  )
                )
                (RETURN_VALUE)
              )
            )
            
            (DECLARE_VARIABLE
              (NAME 'method')
              (TYPE STRING)
              (INITIAL_VALUE (CALL_FUNCTION 'c_string_to_aether' (ARGUMENTS (VARIABLE_REFERENCE 'method_ptr'))))
            )
            
            (DECLARE_VARIABLE
              (NAME 'path')
              (TYPE STRING)  
              (INITIAL_VALUE (CALL_FUNCTION 'c_string_to_aether' (ARGUMENTS (VARIABLE_REFERENCE 'path_ptr'))))
            )
            
            ;; Route requests
            (IF_STATEMENT
              (CONDITION
                (LOGICAL_AND
                  (EXPRESSION_EQUALS (VARIABLE_REFERENCE 'method') (STRING_LITERAL "GET"))
                  (EXPRESSION_EQUALS (VARIABLE_REFERENCE 'path') (STRING_LITERAL "/"))
                )
              )
              (THEN_EXECUTE
                ;; Home page - blog list
                (DECLARE_VARIABLE
                  (NAME 'response_body')
                  (TYPE STRING)
                  (INITIAL_VALUE (CALL_FUNCTION 'render_blog_list' (ARGUMENTS)))
                )
                (CALL_FUNCTION 'http_send_response'
                  (ARGUMENTS
                    (VARIABLE_REFERENCE 'request_context')
                    (INTEGER_LITERAL 200)
                    (STRING_LITERAL "text/html")
                    (VARIABLE_REFERENCE 'response_body')
                  )
                )
              )
              (ELSE_EXECUTE
                (IF_STATEMENT
                  (CONDITION
                    (LOGICAL_AND
                      (EXPRESSION_EQUALS (VARIABLE_REFERENCE 'method') (STRING_LITERAL "GET"))
                      (CALL_FUNCTION 'string_starts_with' 
                        (ARGUMENTS (VARIABLE_REFERENCE 'path') (STRING_LITERAL "/posts/")))
                    )
                  )
                  (THEN_EXECUTE
                    ;; Single post page
                    (DECLARE_VARIABLE
                      (NAME 'post_id')
                      (TYPE STRING)
                      (INITIAL_VALUE
                        (SUBSTRING
                          (VARIABLE_REFERENCE 'path')
                          (INTEGER_LITERAL 7)  ; Skip "/posts/"
                          (STRING_LENGTH (VARIABLE_REFERENCE 'path'))
                        )
                      )
                    )
                    
                    (DECLARE_VARIABLE
                      (NAME 'response_body')
                      (TYPE STRING)
                      (INITIAL_VALUE (CALL_FUNCTION 'render_single_post' (ARGUMENTS (VARIABLE_REFERENCE 'post_id'))))
                    )
                    
                    (IF_STATEMENT
                      (CONDITION (EXPRESSION_EQUALS (VARIABLE_REFERENCE 'response_body') (STRING_LITERAL "")))
                      (THEN_EXECUTE
                        ;; Post not found - 404
                        (CALL_FUNCTION 'http_send_response'
                          (ARGUMENTS
                            (VARIABLE_REFERENCE 'request_context')
                            (INTEGER_LITERAL 404)
                            (STRING_LITERAL "text/html")
                            (CALL_FUNCTION 'render_404_page' (ARGUMENTS))
                          )
                        )
                      )
                      (ELSE_EXECUTE
                        ;; Post found - 200 OK
                        (CALL_FUNCTION 'http_send_response'
                          (ARGUMENTS
                            (VARIABLE_REFERENCE 'request_context')
                            (INTEGER_LITERAL 200)
                            (STRING_LITERAL "text/html")
                            (VARIABLE_REFERENCE 'response_body')
                          )
                        )
                      )
                    )
                  )
                  (ELSE_EXECUTE
                    ;; All other routes - 404
                    (CALL_FUNCTION 'http_send_response'
                      (ARGUMENTS
                        (VARIABLE_REFERENCE 'request_context')
                        (INTEGER_LITERAL 404)
                        (STRING_LITERAL "text/html")
                        (CALL_FUNCTION 'render_404_page' (ARGUMENTS))
                      )
                    )
                  )
                )
              )
            )
          )
          (CATCH_EXCEPTION
            (EXCEPTION_TYPE 'network_error')
            (BINDING_VARIABLE (NAME 'error') (TYPE 'network_error'))
            (HANDLER_BLOCK
              (CALL_FUNCTION 'http_send_response'
                (ARGUMENTS
                  (VARIABLE_REFERENCE 'request_context')
                  (INTEGER_LITERAL 500)
                  (STRING_LITERAL "text/html")
                  (STRING_LITERAL "<h1>Network Error</h1>")
                )
              )
            )
          )
          (CATCH_EXCEPTION
            (EXCEPTION_TYPE 'general_error')
            (BINDING_VARIABLE (NAME 'error') (TYPE 'general_error'))
            (HANDLER_BLOCK
              (CALL_FUNCTION 'http_send_response'
                (ARGUMENTS
                  (VARIABLE_REFERENCE 'request_context')
                  (INTEGER_LITERAL 500)
                  (STRING_LITERAL "text/html")
                  (STRING_LITERAL "<h1>Internal Server Error</h1>")
                )
              )
            )
          )
        )
      )
    )
    
    ;; Main entry point
    (DEFINE_FUNCTION
      (NAME 'main')
      (RETURNS INTEGER)
      (INTENT "Start the HTTP blog server with proper resource management")
      (PRECONDITION
        (PREDICATE_TRUE)
        ASSERT_FAIL "No preconditions for main"
      )
      (POSTCONDITION
        (LOGICAL_OR
          (PREDICATE_EQUALS 'result' 0)
          (PREDICATE_EQUALS 'result' 1)
        )
        ASSERT_FAIL "Main must return 0 (success) or 1 (error)"
      )
      (BODY
        (DECLARE_CONSTANT
          (NAME 'SERVER_PORT')
          (TYPE INTEGER)
          (VALUE (INTEGER_LITERAL 8080))
          (INTENT "HTTP server port")
        )
        
        ;; Use RESOURCE_SCOPE for guaranteed cleanup
        (RESOURCE_SCOPE
          (SCOPE_ID "http_server_lifecycle")
          (ACQUIRES
            (RESOURCE
              (TYPE INTEGER)
              (ID "server_handle")
              (CLEANUP "http_stop_server")
            )
          )
          (CLEANUP_GUARANTEED TRUE)
          (CLEANUP_ORDER REVERSE_ACQUISITION)
          (BODY
            (TRY_EXECUTE
              (PROTECTED_BLOCK
                (DECLARE_VARIABLE
                  (NAME 'server_handle')
                  (TYPE INTEGER)
                  (INITIAL_VALUE
                    (CALL_FUNCTION 'http_create_server'
                      (ARGUMENTS
                        (VARIABLE_REFERENCE 'SERVER_PORT')
                        (ADDRESS_OF 'http_request_handler')
                      )
                    )
                  )
                )
                
                (IF_STATEMENT
                  (CONDITION (EXPRESSION_LESS_EQUAL (VARIABLE_REFERENCE 'server_handle') 0))
                  (THEN_EXECUTE
                    (EXPRESSION_STATEMENT
                      (CALL_FUNCTION 'puts'
                        (ARGUMENTS (STRING_LITERAL "Failed to start HTTP server")))
                    )
                    (RETURN_VALUE (INTEGER_LITERAL 1))
                  )
                  (ELSE_EXECUTE
                    (EXPRESSION_STATEMENT
                      (CALL_FUNCTION 'puts'
                        (ARGUMENTS
                          (STRING_CONCAT
                            (STRING_LITERAL "AetherScript Blog Server started on port ")
                            (STRING_CONCAT
                              (CALL_FUNCTION 'int_to_string' (ARGUMENTS (VARIABLE_REFERENCE 'SERVER_PORT')))
                              (STRING_LITERAL ". Press Ctrl+C to stop.")
                            )
                          )
                        )
                      )
                    )
                    
                    ;; Server runs until terminated externally
                    ;; The RESOURCE_SCOPE will ensure http_stop_server is called on exit
                    (WHILE_LOOP
                      (CONDITION (BOOLEAN_LITERAL TRUE))
                      (BODY
                        ;; Sleep to prevent busy waiting
                        (CALL_FUNCTION 'sleep_ms' (ARGUMENTS (INTEGER_LITERAL 1000)))
                      )
                    )
                    
                    (RETURN_VALUE (INTEGER_LITERAL 0))
                  )
                )
              )
              (CATCH_EXCEPTION
                (EXCEPTION_TYPE 'network_error')
                (BINDING_VARIABLE (NAME 'error') (TYPE 'network_error'))
                (HANDLER_BLOCK
                  (EXPRESSION_STATEMENT
                    (CALL_FUNCTION 'puts'
                      (ARGUMENTS (STRING_LITERAL "Network error starting server")))
                  )
                  (RETURN_VALUE (INTEGER_LITERAL 1))
                )
              )
              (FINALLY_EXECUTE
                (CLEANUP_BLOCK
                  (EXPRESSION_STATEMENT
                    (CALL_FUNCTION 'puts'
                      (ARGUMENTS (STRING_LITERAL "HTTP server shutdown complete")))
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)