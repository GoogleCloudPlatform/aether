(DEFINE_MODULE
  (NAME pattern_match_test)
  (INTENT "Test pattern matching capabilities")
  (CONTENT
    ; Define a simple Result type
    (DEFINE_ENUMERATION_TYPE
      (NAME Result)
      (INTENT "Represents success or failure")
      (VARIANTS
        (VARIANT Ok (HOLDS INTEGER))
        (VARIANT Error (HOLDS STRING))))
    
    ; External function declaration for puts
    (DECLARE_EXTERNAL_FUNCTION
      (NAME puts)
      (LIBRARY "libc")
      (ACCEPTS_PARAMETER (NAME "str") (TYPE STRING))
      (RETURNS INTEGER))
    
    (DEFINE_FUNCTION
      (NAME main)
      (RETURNS INTEGER)
      (BODY
        ; Test with Ok variant
        (DECLARE_VARIABLE (NAME ok_result) (TYPE Result))
        (ASSIGN
          (TARGET_VARIABLE ok_result)
          (SOURCE_EXPRESSION (Ok 42)))
        
        ; Match on the result
        (DECLARE_VARIABLE (NAME msg) (TYPE STRING))
        (ASSIGN
          (TARGET_VARIABLE msg)
          (SOURCE_EXPRESSION 
            (MATCH_EXPRESSION ok_result
              (CASE (Ok value)
                (STRING_CONCAT "Success: " (TO_STRING value)))
              (CASE (Error msg)
                (STRING_CONCAT "Error: " msg)))))
        
        (CALL_FUNCTION puts msg)
        
        (RETURN_VALUE 0)))
  )
)