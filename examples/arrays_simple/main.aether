(DEFINE_MODULE
  (NAME arrays_simple)
  (INTENT "Simple array test")
  (CONTENT
    ; External functions
    (DECLARE_EXTERNAL_FUNCTION
      (NAME printf)
      (LIBRARY "libc")
      (ACCEPTS_PARAMETER (NAME "format") (TYPE STRING))
      (RETURNS INTEGER))
    
    (DEFINE_FUNCTION
      (NAME test_arrays)
      (RETURNS INTEGER)
      (BODY
        ; Create an array literal
        (DECLARE_VARIABLE (NAME arr) (TYPE (ARRAY_OF_TYPE INTEGER)))
        (ASSIGN
          (TARGET_VARIABLE arr)
          (SOURCE_EXPRESSION (ARRAY_LITERAL 10 20 30 40 50)))
        
        ; Get array length
        (DECLARE_VARIABLE (NAME len) (TYPE INTEGER))
        (ASSIGN
          (TARGET_VARIABLE len)
          (SOURCE_EXPRESSION (ARRAY_LENGTH arr)))
        (CALL_FUNCTION printf "Array length: %d\n" len)
        
        ; Access array elements
        (DECLARE_VARIABLE (NAME first) (TYPE INTEGER))
        (ASSIGN
          (TARGET_VARIABLE first)
          (SOURCE_EXPRESSION (GET_ARRAY_ELEMENT arr 0)))
        (CALL_FUNCTION printf "First element: %d\n" first)
        
        (DECLARE_VARIABLE (NAME second) (TYPE INTEGER))
        (ASSIGN
          (TARGET_VARIABLE second)
          (SOURCE_EXPRESSION (GET_ARRAY_ELEMENT arr 1)))
        (CALL_FUNCTION printf "Second element: %d\n" second)
        
        (RETURN_VALUE 0)))
    
    (DEFINE_FUNCTION
      (NAME main)
      (RETURNS INTEGER)
      (BODY
        (CALL_FUNCTION test_arrays)
        (RETURN_VALUE 0)))
  )
)